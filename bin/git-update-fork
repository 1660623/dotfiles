#!/bin/sh

# Updates a GitHub forked project with the latest code from the original and pushes the updated code
# to the personal copy.
#
# Assumes that the original project is on a remote named `upstream` and the personal copy is on a
# remote named `origin`. It will only merge by fast-forward and will not push to the personal copy
# unless the fetch and merge was successful.

# Piping to /dev/null seems to reverse the error condition for some reason
if git remote | grep upstream 2>&1 /dev/null; then
    printf "There is no upstream remote!\n" >&2
    exit 2
fi

if [ "$(git current-branch)" != 'master' ]; then
    printf "Must be on the master branch to update the fork!\n" >&2
    exit 3
fi

git pull --ff-only upstream master && git push origin master
