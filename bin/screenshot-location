#!/usr/bin/env elixir

# Changes the default location for storing screenshots using the OS X keyboard commands.
#
# From: http://osxdaily.com/2011/01/26/change-the-screenshot-save-file-location-in-mac-os-x/

defmodule Defaults do
  def read(args) do
    results = System.cmd("defaults", ["read"] ++ OptionParser.split(args), stderr_to_stdout: true)
    read_results(results, args)
  end

  def write(args) do
    {output, 0} = System.cmd("defaults", ["write"] ++ OptionParser.split(args))
    output
  end

  defp read_results({output, 0}, _), do: {:ok, output}
  defp read_results({_, 1}, args), do: {:error, "Default for '#{args}' does not exist\n"}
end

defmodule ScreenshotLocation do
  @errors %{
    default_and_location: "Cannot specify 'default' and a location together\n",
    more_than_one_location: "Cannot specify more than one location\n"
  }

  def execute([default: true], []), do: write_location("~/Desktop")
  def execute([default: true], _), do: display_error(:default_and_location)
  def execute(_, [location]), do: write_location(location)
  def execute(_, []), do: read_location
  def execute(_, args) when is_list(args), do: display_error(:more_than_one_location)

  defp display_error(error), do: IO.write @errors[error]

  defp read_location do
    case Defaults.read("com.apple.screencapture location") do
      {:ok, output} -> IO.write output
      {:error, _}   -> IO.write(Path.join(System.get_env("HOME"), "Desktop"))
    end
  end

  defp write_location(location) do
    location = Path.expand(location)

    Defaults.write("com.apple.screencapture location #{location}/")
      |> IO.write
  end
end

{options, args, _} = OptionParser.parse(System.argv(), strict: [default: :boolean])
ScreenshotLocation.execute(options, args)
