#!/usr/bin/env ruby

require 'json'
require 'open-uri'
require 'optparse'
require 'ostruct'

def parse_github_issue_spec(spec)
  if /((?<owner>[^\/]+)\/(?<repo>[^#]+)#)?(?<issue_number>\d+)/ =~ spec
    [owner || 'atom', repo || 'atom', issue_number]
  else
    raise ArgumentError, "Unrecognized GitHub Issue format: #{spec}"
  end
end

parser = OptionParser.new do |opts|
  opts.banner = <<EOL
Creates a Markdown link to the given GitHub Issue after retrieving the Issue title.

The ISSUE can be either an atom/atom Issue number or a full GitHub Issue specification.

Usage: #{opts.program_name} [options] ISSUE
EOL

  opts.separator ""
  opts.separator "Specific options:"

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end

parser.parse!(ARGV)
spec = ARGV[0]

owner, repo, issue_number = parse_github_issue_spec(spec)
spec = "##{spec}" unless spec.include?('#')
api_uri = "https://api.github.com/repos/#{owner}/#{repo}/issues/#{issue_number}"
web_uri = "https://github.com/#{owner}/#{repo}/issues/#{issue_number}"

issue = OpenStruct.new(JSON.parse(open(api_uri).read))

puts "[#{spec} - #{issue.title}](#{web_uri})"
