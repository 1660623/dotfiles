#!/usr/bin/env ruby

require 'date'
require 'json'
require 'net/http'
require 'optparse'

def page(url)
  if url =~ /page=(?<page>\d+)$/
    Regexp.last_match[:page]
  end
end

def parse_arguments(args)
  options = {}

  OptionParser.new do |opts|
    opts.on("-tTOKEN", "--token=TOKEN", "Access token") do |t|
      options[:token] = t
    end

    opts.on("-v", "--verbose", "Verbose output") do |v|
      options[:verbose] = v
    end
  end.parse!(args)

  options
end

def parse_next(text)
  if text =~ /<(?<url>[^>]*)>; rel="next"/
    Regexp.last_match[:url]
  end
end

def request(path)
  Net::HTTP.start('api.github.com', use_ssl: true) { |http| http.get(path) }
end

def print_downloads(body)
  releases = JSON.parse(body)

  total = 0
  releases.each do |release|
    count = 0
    release_name = release["tag_name"]
    next unless release["published_at"]
    release_date = DateTime.parse(release["published_at"]).to_date.iso8601

    release["assets"].each do |asset|
      asset_name = asset["name"]
      if !(asset_name =~ /symbols/) && (asset_name != /atom-api.json/)
        count += asset["download_count"].to_i
      end
    end

    total += count
    puts "#{release_date},#{release_name},#{count}" unless count == 0
  end

  total
end

options = parse_arguments(ARGV)

nwo = ARGV.first
url = "/repos/#{nwo}/releases?per_page=100"
url += "&access_token=#{options[:token]}" if options[:token]
resp = request(url)
print_downloads(resp.body)

total = 0
while resp["link"] do
  next_link = parse_next(resp["link"])
  break if next_link.nil?
  url = parse_next(resp["link"]).sub("https://api.github.com", "")
  $stderr.puts "Page #{page(url)}" if options[:verbose]
  $stderr.puts "Rate Limit Remaining = #{resp["x-ratelimit-remaining"]}" if options[:verbose]
  resp = request(url)
  total += print_downloads(resp.body)
end

puts "Total = #{total}"
